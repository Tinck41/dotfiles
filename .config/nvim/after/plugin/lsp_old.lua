-- local lsp = require("lsp-zero")
-- 
-- lsp.preset("recommended")
-- 
-- lsp.ensure_installed({
-- 	'clangd',
-- 	'lua_ls',
-- 	'jsonls',
-- 	'ols',
-- 	'rust_analyzer',
-- })

-- require("luasnip.loaders.from_vscode").lazy_load()
-- 
-- vim.api.nvim_set_hl(0, "MyPmenuSel",  { bg = "#d65d0e", fg = "#ebdbb2" })

-- local cmp = require("cmp")
-- 
-- cmp.setup({
-- 	snippet = {
-- 		expand = function(args)
-- 			require('luasnip').lsp_expand(args.body)
-- 		end,
-- 	},
-- 	window = {
-- 		documentation = cmp.config.window.bordered(),
-- 		completion = {
-- 			border = "rounded",
-- 			winhighlight = "Normal:None,FloatBorder:None,CursorLine:MyPmenuSel",
-- 			win
-- 		}
-- 	},
-- 	mapping = cmp.mapping.preset.insert({
-- 		['<C-Space>'] = cmp.mapping.complete(),
-- 		['<CR>'] = cmp.mapping.confirm({ select = true })
-- 	}),
-- 	sources = cmp.config.sources({
-- 		{ name = 'nvim_lsp' },
-- 		{ name = 'luasnip' },
-- 	}, {
-- 		{ name = 'buffer' },
-- 	})
-- })

-- lsp.on_attach(function(client, bufnr)
-- 	local opts = {buffer = bufnr, remap = false}
-- 	local builtin = require("telescope.builtin")
-- 
-- 	-- vim.keymap.set("n", "gd", function() vim.lsp.buf.definition() end, opts)
-- 	vim.keymap.set("n", "gd", function() builtin.lsp_definitions() end, opts)
-- 	vim.keymap.set("n", "gr", function() builtin.lsp_references() end, opts)
-- 	vim.keymap.set("n", "gi", function() vim.lsp.buf.implementation() end, opts)
-- 	vim.keymap.set("n", "<leader>ko", ":ClangdSwitchSourceHeader<Cr>")
-- 	vim.keymap.set("n", "<leader>gi", function() vim.lsp.buf.hover() end, opts)
-- 
-- 	opts = { noremap=true, silent=true }
-- 
-- 	local function quickfix()
-- 		vim.lsp.buf.code_action({
-- 			filter = function(a) return a.isPreferred end,
-- 			apply = true
-- 		})
-- 	end
-- 	vim.keymap.set('n', '<leader>qf', quickfix, opts)
-- end)

--local capabilities = require('cmp_nvim_lsp').default_capabilities()
--local capabilities = vim.tbl_deep_extend('force', 
--	vim.lsp.protocol.make_client_capabilities(), 
--	require('cmp_nvim_lsp').default_capabilities()
--)
-- local capabilities = vim.lsp.protocol.make_client_capabilities()
-- local lspconfig = require('lspconfig')
-- 
-- lspconfig.clangd.setup {
-- 	capabilities = capabilities,
-- }
-- lspconfig.lua_ls.setup {
-- 	capabilities = capabilities,
-- }
-- lspconfig.jsonls.setup {
-- 	capabilities = capabilities,
-- }
-- lspconfig.ols.setup {
-- 	capabilities = capabilities,
-- }
-- lspconfig.rust_analyzer.setup {
-- 	capabilities = capabilities,
-- }

-- lsp.setup()


